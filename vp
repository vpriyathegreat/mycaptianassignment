ng generate component role-selector --standalone



import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-role-selector',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './role-selector.component.html',
})
export class RoleSelectorComponent {
  constructor(private router: Router) {}

  navigateTo(role: string) {
    this.router.navigate([`/${role}`]);
  }
}



<h2>Select Role</h2>
<button (click)="navigateTo('customer')">Customer</button>
<button (click)="navigateTo('admin')">Admin</button>





import { Routes } from '@angular/router';
import { RoleSelectorComponent } from './role-selector/role-selector.component';
import { AdminComponent } from './admin/admin.component';
import { CustomerComponent } from './customer/customer.component';

export const routes: Routes = [
  { path: '', component: RoleSelectorComponent },
  { path: 'admin', component: AdminComponent },
  { path: 'customer', component: CustomerComponent }
];





import { bootstrapApplication } from '@angular/platform-browser';
import { provideHttpClient } from '@angular/common/http';
import { provideRouter } from '@angular/router';
import { RoleSelectorComponent } from './app/role-selector/role-selector.component';
import { routes } from './app/app.routes';

bootstrapApplication(RoleSelectorComponent, {
  providers: [provideHttpClient(), provideRouter(routes)],
});






















import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-admin',
  templateUrl: './admin.component.html',
  styleUrls: ['./admin.component.css']
})
export class AdminComponent implements OnInit {

  applications: any[] = [];

  constructor(private http: HttpClient) {}

  ngOnInit(): void {
    this.fetchApplications();
  }

  fetchApplications(): void {
    this.http.get<any>('http://localhost:8000/api/applications/') // change the URL if needed
      .subscribe(
        (response) => {
          console.log('Fetched applications:', response);
          this.applications = response.data;
        },
        (error) => {
          console.error('Error fetching applications:', error);
        }
      );
  }
}
